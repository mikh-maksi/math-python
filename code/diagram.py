from tkinter import *
import math
def x(t):
    return t
# return math.cos(5*t)

def defined(t):
   return not (t==0.5)
   #return 1
   
def y(t):
    if defined(t):
      return (t/8+0.0625)/(2*t-1)
      #return t/2+0.75
      #return t*t/4+t/3-0.25
      #return math.sin(7*t)
    else:
       return 0

nx=600   # СЂРѕР·РјС–СЂ Р·РѕР±СЂР°Р¶РµРЅРЅСЏ РїРѕ РіРѕСЂРёР·РѕРЅС‚Р°Р»С–
ny=600   # СЂРѕР·РјС–СЂ Р·РѕР±СЂР°Р¶РµРЅРЅСЏ РїРѕ РІРµСЂС‚РёРєР°Р»С–
nj=2000  # РєС–Р»СЊРєС–СЃС‚СЊ Р»Р°РЅРѕРє Р»Р°РјР°РЅРѕС— - РЅР°Р±Р»РёР¶РµРЅРЅСЏ РіСЂР°С„С–РєР°
t0=-10   # РЅР°Р№РјРµРЅС€Рµ  Р·РЅР°С‡РµРЅРЅСЏ Р°СЂРіСѓРјРµРЅС‚Р°
t1=10    # РЅР°Р№Р±С–Р»СЊС€Рµ Р·РЅР°С‡РµРЅРЅСЏ Р°СЂРіСѓРјРµРЅС‚Р°
x0=-1    # РЅР°Р№РјРµРЅС€Рµ  Р·РЅР°С‡РµРЅРЅСЏ Р°Р±СЃС†РёСЃРё  РЅР° СЂРёСЃСѓРЅРєСѓ
x1= 1    # РЅР°Р№Р±С–Р»СЊС€Рµ Р·РЅР°С‡РµРЅРЅСЏ Р°Р±СЃС†РёСЃРё  РЅР° СЂРёСЃСѓРЅРєСѓ
y0=-1    # РЅР°Р№РјРµРЅС€Рµ  Р·РЅР°С‡РµРЅРЅСЏ РѕСЂРґРёРЅР°С‚Рё РЅР° СЂРёСЃСѓРЅРєСѓ
y1= 1    # РЅР°Р№Р±С–Р»СЊС€Рµ Р·РЅР°С‡РµРЅРЅСЏ РѕСЂРґРёРЅР°С‚Рё РЅР° СЂРёСЃСѓРЅРєСѓ
dx=x1-x0 # РїСЂРёСЂС–СЃС‚ Р°Р±СЃС†РёСЃРё  РЅР° СЂРёСЃСѓРЅРєСѓ
dy=y1-y0 # РїСЂРёСЂiСЃС‚ РѕСЂРґРёРЅР°С‚Рё РЅР° СЂРёСЃСѓРЅРєСѓ
dt=(t1-t0)/nj # РїСЂРёСЂiСЃС‚ Р°СЂРіСѓРјРµРЅС‚Р° РјС–Р¶ РІРµСЂС€РёРЅР°РјРё Р»Р°РјР°РЅРѕС—
txx=10   # Р·СЃСѓРІ РїС–РґРїРёСЃСѓ x РїРѕ РіРѕСЂРёР·РѕРЅС‚Р°Р»С– РІС–Рґ РєСЂР°СЋ СЂРёСЃСѓРЅРєР°
txy=15   # Р·СЃСѓРІ РїС–РґРїРёСЃСѓ x РїРѕ РІРµСЂС‚РёРєР°Р»С– РІС–Рґ РѕСЃС– Р°Р±СЃС†РёСЃ
tyx=15   # Р·СЃСѓРІ РїС–РґРїРёСЃСѓ y РїРѕ РіРѕСЂРёР·РѕРЅС‚Р°Р»С– РІС–Рґ РѕСЃС– РѕСЂРґРёРЅР°С‚
tyy=10   # Р·СЃСѓРІ РїС–РґРїРёСЃСѓ y РїРѕ РІРµСЂС‚РёРєР°Р»С– РІС–Рґ РєСЂР°СЋ СЂРёСЃСѓРЅРєР°
ax=3     # РїРѕР»РѕРІРёРЅР° СЂРѕР·РјС–СЂСѓ РїРѕ РіРѕСЂРёР·РѕРЅС‚Р°Р»С– СЃС‚СЂС–Р»РєРё РЅР° РѕСЃС– РѕСЂРґРёРЅР°С‚
ay=8     # РїРѕР»РѕРІРёРЅР° СЂРѕР·РјС–СЂСѓ РїРѕ РІРµСЂС‚РёРєР°Р»С–   СЃС‚СЂС–Р»РєРё РЅР° РѕСЃС– Р°Р±СЃС†РёСЃ

root = Tk()
c = Canvas(root, width=nx, height=ny, bg='white')
c.pack()

if (x0<0) and (0<x1):  
  ix=(0-x0)*nx/dx
  c.create_line( ix,0, ix,ny)    # Р·РѕР±СЂР°Р¶РµРЅРЅСЏ РѕСЃС– РѕСЂРґРёРЅР°С‚
  ixp=(0-x0)*nx/dx-ax
  iyp=ay
  c.create_line( ix,0, ixp,iyp)  # Р»С–РІР° С‡Р°СЃС‚РёРЅР° СЃС‚СЂС–Р»РєРё
  ixp=(0-x0)*nx/dx+ax
  c.create_line( ix,0, ixp,iyp)  # РїСЂР°РІР° С‡Р°СЃС‚РёРЅР° СЃС‚СЂС–Р»РєРё
  ix=(0-x0)*nx/dx-tyx
  iy=tyy
  widget = Label(c, text='y', fg='black', bg='white')
  widget.pack()
  c.create_window(ix, iy, window=widget) 

if (y0<0) and (0<y1):
  iy=((y1-0)*ny/dy)
  c.create_line( 0,iy, nx,iy)  # Р·РѕР±СЂР°Р¶РµРЅРЅСЏ РѕСЃС– Р°Р±СЃС†РёСЃ
  ixp=nx-ay
  iyp=(y1-0)*ny/dy-ax
  c.create_line(nx,iy, ixp,iyp)  # РІРµСЂС…РЅСЏ С‡Р°СЃС‚РёРЅР° СЃС‚СЂС–Р»РєРё
  iyp=(y1-0)*ny/dy+ax
  c.create_line(nx,iy, ixp,iyp) # РЅРёС…РЅСЏ  С‡Р°СЃС‚РёРЅР° СЃС‚СЂС–Р»РєРё
  iy=(y1-0)*ny/dy+txy
  ix=nx-txy
  widget = Label(c, text='x', fg='black', bg='white')
  widget.pack()
  c.create_window(ix, iy, window=widget) 
   
ixp=((x(t0)-x0)*nx/dx)
iyp=((y1-y(t0))*ny/dy)
tp=t0
for j in range(0, nj):
  t=t0+j*dt
  if defined(t) and defined(tp):
    ix=((x(t)-x0)*nx/dx)
    iy=((y1-y(t))*ny/dy)
    if ((0<=ix) and (0<=iy) and (ix<nx) and (iy<ny) and
       (0<=ixp) and (0<=iyp) and (ixp<nx) and (iyp<ny)):
          c.create_line(ixp,iyp,ix,iy, fill='red', width=3) # РІС–РґСЂС–Р·РѕРє РјС–Р¶ С‚РѕС‡РєР°РјРё РіСЂР°С„С–РєР°  
  tp=t
  ixp=ix
  iyp=iy
 
root.mainloop()
